(()=>{"use strict";class t{constructor(t,e,s,d,a="no",i){this.title=t,this.description=e,this.dueDate=s,this.priority=d,this.completed=a,this.id=i}}const e=new class{constructor(){this.modal=document.querySelector(".form-modal"),this.taskList=document.querySelector(".task-list"),this.descModal=document.querySelector(".desc-modal")}getFormValues(){return{title:document.getElementById("title").value,description:document.getElementById("description").value,dueDate:document.getElementById("due-date").value,priority:document.getElementById("priority").value}}clearForm(){document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("due-date").value="",document.getElementById("priority").value=""}renderTasks(t){this.taskList.textContent="",t.forEach((t=>{const e=`<div class="task-item ${"important"===t.priority?"important":""} " data-id="${t.id}">\n      <input type="checkbox" class="task-checkbox" />\n        ${t.title}\n        <div class="options">\n          <div class="date">${t.dueDate}</div>\n          <div class="details-btn task-item-btn">\n            <img src="/assets/images/details.svg" alt="" />\n          </div>\n          <div class="delete-task task-item-btn">\n            <img src="/assets/images/trash.svg" alt="" />\n          </div>\n        </div>\n      </div>`;this.taskList.insertAdjacentHTML("beforeend",e)})),this.checkBoxHandler(t),this.detailsBtnHandler(t)}detailsBtnHandler(t){document.querySelectorAll(".details-btn").forEach((e=>{e.addEventListener("click",(e=>{const s=e.target.closest(".task-item").dataset.id,d=`\n        <button class="desc-close-btn modal-close-btn">X</button>\n        <div><div class="details-title">Task Title:</div>${t[s].title}</div>\n        <div>\n          <div class="details-title">Description:</div>${t[s].description}\n        </div>\n        <div><div class="details-title">Due Date:</div>${t[s].dueDate}</div>\n        <div><div class="details-title">Status:</div>${t[s].completed}</div>\n      `;"none"===this.descModal.style.display?(this.descModal.insertAdjacentHTML("beforeend",d),this.descModal.style.display="flex",this.modalCloseBtnHandler()):(this.descModal.style.display="none",this.descModal.textContent="")}))}))}btnHandler(t){t.forEach((t=>{t.addEventListener("click",(t=>{t.preventDefault(),this.showForm()}))}))}checkBoxHandler(t){document.querySelectorAll(".task-checkbox").forEach((e=>{e.addEventListener("change",(e=>{const s=e.target.closest(".task-item").dataset.id,d=document.querySelector(`[data-id="${s}"]`);e.target.checked?(d.classList.add("completed"),t.find((t=>t.id===parseInt(s))).completed="yes"):(d.classList.remove("completed"),t.find((t=>t.id===parseInt(s))).completed="no")}))}))}modalCloseBtnHandler(){document.querySelectorAll(".modal-close-btn").forEach((t=>{t.addEventListener("click",(t=>{t.target.classList.contains("desc-close-btn")&&(this.descModal.style.display="none",this.descModal.textContent=""),t.target.classList.contains("form-close")&&(this.modal.style.display="none")}))}))}showForm(){"none"===this.modal.style.display?this.modal.style.display="flex":this.modal.style.display="none"}},s=new class{constructor(){this.tasks=[],this.counter=0}addTask(e){const{title:s,description:d,dueDate:a,priority:i,completed:l}=e,n=new t(s,d,a,i,l,this.counter);this.tasks.push(n),this.counter++}getTasks(){return this.tasks}deleteTask(t){const e=this.tasks.findIndex((e=>e.id===t));-1!==e&&(this.tasks.splice(e,1),console.log(this.tasks))}},d=document.querySelectorAll(".add-new");document.querySelector(".form-modal").addEventListener("submit",(function(t){t.preventDefault(),s.addTask(e.getFormValues());const d=s.getTasks();e.renderTasks(d),e.clearForm()})),document.querySelector(".task-list").addEventListener("click",(t=>{if(t.target.closest(".delete-task")){const d=t.target.closest(".task-item").dataset.id;s.deleteTask(+d),console.log(typeof+d);const a=s.getTasks();e.renderTasks(a)}})),e.btnHandler(d),e.modalCloseBtnHandler(),e.checkBoxHandler(s.getTasks())})();